{"version":3,"sources":["useScrollableInternal.ts"],"names":["useCallback","useRef","useMemo","findNodeHandle","event","useCode","onChange","set","call","useValue","useBottomSheetInternal","useScrollableInternal","type","scrollableContentOffsetYRef","scrollableContentOffsetY","scrollableRef","_scrollableContentOffsetY","setScrollableRef","removeScrollableRef","handleScrollEvent","nativeEvent","contentOffset","y","handleSettingScrollable","setValue","current","id","node","getNode","console","warn","args"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,KAAT,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,GAAnC,EAAwCC,IAAxC,QAAoD,yBAApD;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,sBAAT,QAAuC,iCAAvC;AAGA,OAAO,MAAMC,qBAAqB,GAAIC,IAAD,IAA0B;AAC7D;AACA,QAAMC,2BAA2B,GAAGZ,MAAM,CAAS,CAAT,CAA1C;AACA,QAAMa,wBAAwB,GAAGL,QAAQ,CAAS,CAAT,CAAzC;AACA,QAAMM,aAAa,GAAGd,MAAM,CAAa,IAAb,CAA5B,CAJ6D,CAM7D;;AACA,QAAM;AACJa,IAAAA,wBAAwB,EAAEE,yBADtB;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA;AAHI,MAIFR,sBAAsB,EAJ1B,CAP6D,CAa7D;;AACA,QAAMS,iBAAiB,GAAGjB,OAAO,CAC/B,MACEE,KAAK,CAAC,CACJ;AACEgB,IAAAA,WAAW,EAAE;AACXC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,CAAC,EAAER;AAAL;AADJ;AADf,GADI,CAAD,CAFwB,EAS/B,CAACA,wBAAD,CAT+B,CAAjC;AAWA,QAAMS,uBAAuB,GAAGvB,WAAW,CAAC,MAAM;AAChDgB,IAAAA,yBAAyB,CAACQ,QAA1B,CAAmCX,2BAA2B,CAACY,OAA/D;;AAEA,UAAMC,EAAE,GAAGvB,cAAc,CAACY,aAAa,CAACU,OAAf,CAAzB;;AAEA,QAAIC,EAAJ,EAAQ;AACNT,MAAAA,gBAAgB,CAAC;AACfS,QAAAA,EAAE,EAAEA,EADW;AAEfd,QAAAA,IAFe;AAGf;AACAe,QAAAA,IAAI,EAAEZ,aAAa,CAACU,OAAd,CAAuBG,OAAvB;AAJS,OAAD,CAAhB;AAMD,KAPD,MAOO;AACLC,MAAAA,OAAO,CAACC,IAAR;AACD;;AAED,WAAO,MAAM;AACXZ,MAAAA,mBAAmB,CAACH,aAAD,CAAnB;AACD,KAFD;AAGD,GAnB0C,EAmBxC,CAACH,IAAD,EAAOI,yBAAP,EAAkCE,mBAAlC,EAAuDD,gBAAvD,CAnBwC,CAA3C,CAzB6D,CA8C7D;;AACAZ,EAAAA,OAAO,CACL,MACEC,QAAQ,CAACQ,wBAAD,EAA2B,CACjCP,GAAG,CAACS,yBAAD,EAA4BF,wBAA5B,CAD8B,EAEjCN,IAAI,CAAC,CAACM,wBAAD,CAAD,EAA6BiB,IAAI,IAAI;AACvClB,IAAAA,2BAA2B,CAACY,OAA5B,GAAsCM,IAAI,CAAC,CAAD,CAA1C;AACD,GAFG,CAF6B,CAA3B,CAFL,EAQL,EARK,CAAP;AAWA,SAAO;AACLhB,IAAAA,aADK;AAELI,IAAAA,iBAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD,CA/DM","sourcesContent":["import { useCallback, useRef, useMemo } from 'react';\nimport { findNodeHandle } from 'react-native';\nimport { event, useCode, onChange, set, call } from 'react-native-reanimated';\nimport { useValue } from 'react-native-redash';\nimport { useBottomSheetInternal } from '../hooks/useBottomSheetInternal';\nimport type { Scrollable, ScrollableType } from '../types';\n\nexport const useScrollableInternal = (type: ScrollableType) => {\n  // refs\n  const scrollableContentOffsetYRef = useRef<number>(0);\n  const scrollableContentOffsetY = useValue<number>(0);\n  const scrollableRef = useRef<Scrollable>(null);\n\n  // hooks\n  const {\n    scrollableContentOffsetY: _scrollableContentOffsetY,\n    setScrollableRef,\n    removeScrollableRef,\n  } = useBottomSheetInternal();\n\n  // callbacks\n  const handleScrollEvent = useMemo(\n    () =>\n      event([\n        {\n          nativeEvent: {\n            contentOffset: { y: scrollableContentOffsetY },\n          },\n        },\n      ]),\n    [scrollableContentOffsetY]\n  );\n  const handleSettingScrollable = useCallback(() => {\n    _scrollableContentOffsetY.setValue(scrollableContentOffsetYRef.current);\n\n    const id = findNodeHandle(scrollableRef.current);\n\n    if (id) {\n      setScrollableRef({\n        id: id,\n        type,\n        // @ts-ignore\n        node: scrollableRef.current!.getNode(),\n      });\n    } else {\n      console.warn(`Couldn't find the scrollable node handle id!`);\n    }\n\n    return () => {\n      removeScrollableRef(scrollableRef);\n    };\n  }, [type, _scrollableContentOffsetY, removeScrollableRef, setScrollableRef]);\n\n  // effects\n  useCode(\n    () =>\n      onChange(scrollableContentOffsetY, [\n        set(_scrollableContentOffsetY, scrollableContentOffsetY),\n        call([scrollableContentOffsetY], args => {\n          scrollableContentOffsetYRef.current = args[0];\n        }),\n      ]),\n    []\n  );\n\n  return {\n    scrollableRef,\n    handleScrollEvent,\n    handleSettingScrollable,\n  };\n};\n"]}