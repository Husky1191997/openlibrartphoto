{"version":3,"sources":["BottomSheet.tsx"],"names":["React","useState","useMemo","useRef","useCallback","forwardRef","useImperativeHandle","memo","useLayoutEffect","useEffect","AccessibilityInfo","isEqual","invariant","Animated","useCode","onChange","call","eq","cond","neq","and","Extrapolate","set","sub","abs","greaterThan","State","usePanGestureHandler","useTapGestureHandler","BottomSheetDraggableView","BottomSheetContentWrapper","BottomSheetContainer","BottomSheetHandleContainer","BottomSheetBackgroundContainer","BottomSheetBackdropContainer","useTransition","useStableCallback","useScrollable","useNormalizedSnapPoints","usePropsValidator","useReactiveValue","BottomSheetInternalProvider","BottomSheetProvider","GESTURE","WINDOW_HEIGHT","NORMAL_DECELERATION_RATE","DEFAULT_ANIMATE_ON_MOUNT","DEFAULT_ANIMATION_EASING","DEFAULT_ANIMATION_DURATION","DEFAULT_HANDLE_HEIGHT","DEFAULT_ENABLE_CONTENT_PANNING_GESTURE","DEFAULT_ENABLE_HANDLE_PANNING_GESTURE","styles","interpolate","interpolateV1","interpolateNode","interpolateV2","require","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","props","ref","animationDuration","animationEasing","index","_providedIndex","snapPoints","_providedSnapPoints","handleHeight","_providedHandleHeight","containerHeight","_providedContainerHeight","topInset","enableContentPanningGesture","enableHandlePanningGesture","animateOnMount","animatedPosition","_providedAnimatedPosition","animatedIndex","_providedAnimatedIndex","_providedOnChange","onAnimate","_providedOnAnimate","handleComponent","backdropComponent","backgroundComponent","children","containerTapGestureRef","setContainerHeight","setHandleHeight","safeHandleHeight","safeContainerHeight","shouldMeasureContainerHeight","undefined","shouldMeasureHandleHeight","didSetHandleHeight","didSetContainerHeight","isLayoutCalculated","current","animatedIsLayoutReady","currentIndexRef","didMountOnAnimate","scrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollToTop","flashScrollableIndicators","sheetHeight","length","initialPosition","state","containerTapGestureState","gestureHandler","containerTapGestureHandler","handlePanGestureState","translation","y","handlePanGestureTranslationY","velocity","handlePanGestureVelocityY","handlePanGestureHandler","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","handleOnAnimate","fromIndex","toIndex","position","manualSnapToPoint","currentPosition","currentGesture","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","map","_","push","inputRange","outputRange","extrapolate","CLAMP","handleOnContainerMeasureHeight","height","handleOnHandleMeasureHeight","refreshUIElements","currentPositionIndex","Math","max","setNativeProps","maxDeltaY","handleOnChange","handleSettingScrollableRef","scrollableRef","handleSnapTo","setValue","handleClose","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","containerStyle","container","opacity","transform","translateY","contentContainerStyle","contentContainer","args","indexOf","isScreenReaderEnabled","then","isEnabled","positionInScreen","floor","toFixed","announceForAccessibility","FAILED","CONTENT","BottomSheet"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useLayoutEffect,\n  useEffect,\n} from 'react';\nimport { ViewStyle, AccessibilityInfo } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  Extrapolate,\n  set,\n  sub,\n  abs,\n  greaterThan,\n} from 'react-native-reanimated';\nimport { State, TapGestureHandler } from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n} from 'react-native-redash';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport BottomSheetContentWrapper from '../bottomSheetContentWrapper';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\nimport BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport { useTransition } from './useTransition';\nimport {\n  useStableCallback,\n  useScrollable,\n  useNormalizedSnapPoints,\n  usePropsValidator,\n  useReactiveValue,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE, WINDOW_HEIGHT } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_HANDLE_HEIGHT,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (props, ref) => {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      topInset = 0,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      // animated nodes callback\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n      // callbacks\n      onChange: _providedOnChange,\n      onAnimate: _providedOnAnimate,\n      // components\n      handleComponent,\n      backdropComponent,\n      backgroundComponent,\n      children,\n    } = props;\n    //#endregion\n\n    //#region component refs\n    const containerTapGestureRef = useRef<TapGestureHandler>(null);\n    //#endregion\n\n    //#region layout variables\n    // state\n    const [containerHeight, setContainerHeight] = useState(\n      _providedContainerHeight\n    );\n    const [handleHeight, setHandleHeight] = useState(_providedHandleHeight);\n\n    // safe layout values\n\n    const safeHandleHeight = useMemo(\n      () => handleHeight || DEFAULT_HANDLE_HEIGHT,\n      [handleHeight]\n    );\n    const safeContainerHeight = useMemo(\n      () => _providedContainerHeight || containerHeight || WINDOW_HEIGHT,\n      [_providedContainerHeight, containerHeight]\n    );\n\n    // conditions\n    const shouldMeasureContainerHeight = useMemo(\n      () => _providedContainerHeight === undefined,\n      [_providedContainerHeight]\n    );\n    const shouldMeasureHandleHeight = useMemo(\n      () =>\n        _providedHandleHeight === undefined &&\n        backgroundComponent !== undefined,\n      [_providedHandleHeight, backgroundComponent]\n    );\n\n    // refs\n    const didSetHandleHeight = useRef(!shouldMeasureHandleHeight);\n    const didSetContainerHeight = useRef(!shouldMeasureContainerHeight);\n\n    const isLayoutCalculated = useMemo(\n      () => {\n        return didSetHandleHeight.current && didSetContainerHeight.current;\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [containerHeight, handleHeight]\n    );\n    const animatedIsLayoutReady = useReactiveValue(isLayoutCalculated ? 1 : 0);\n\n    //#endregion\n\n    //#region variables\n\n    // refs\n    const currentIndexRef = useRef<number>(_providedIndex);\n    const didMountOnAnimate = useRef(false);\n\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    const snapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      topInset,\n      safeContainerHeight,\n      safeHandleHeight\n    );\n\n    const sheetHeight = useMemo(\n      () =>\n        safeContainerHeight -\n        snapPoints[snapPoints.length - 1] -\n        safeHandleHeight,\n      [snapPoints, safeContainerHeight, safeHandleHeight]\n    );\n\n    const initialPosition = useMemo(() => {\n      return currentIndexRef.current < 0 || animateOnMount\n        ? safeContainerHeight - topInset\n        : snapPoints[currentIndexRef.current];\n    }, [snapPoints, animateOnMount, safeContainerHeight, topInset]);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: containerTapGestureState,\n      gestureHandler: containerTapGestureHandler,\n    } = useTapGestureHandler();\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n    //#endregion\n\n    //#region animated variables\n    const handleOnAnimate = useStableCallback(\n      (fromIndex: number, toIndex: number) => {\n        if (_providedOnAnimate) {\n          _providedOnAnimate(fromIndex, toIndex);\n        }\n      }\n    );\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      animatedIsLayoutReady,\n      snapPoints,\n      initialPosition,\n      currentIndexRef,\n      onAnimate: handleOnAnimate,\n    });\n\n    // animated values\n    const animatedIndex = useMemo(() => {\n      const adjustedSnapPoints = snapPoints.slice().reverse();\n      const adjustedSnapPointsIndexes = snapPoints\n        .slice()\n        .map((_, index) => index)\n        .reverse();\n\n      /**\n       * this been added to resolve issues when provide\n       * one snap point.\n       */\n      if (snapPoints.length === 1) {\n        adjustedSnapPoints.push(safeContainerHeight);\n        adjustedSnapPointsIndexes.push(-1);\n      }\n\n      return interpolate(position, {\n        inputRange: adjustedSnapPoints,\n        outputRange: adjustedSnapPointsIndexes,\n        extrapolate: Extrapolate.CLAMP,\n      });\n    }, [position, safeContainerHeight, snapPoints]);\n\n    const animatedPosition = useMemo(\n      () => abs(sub(safeContainerHeight, position)),\n      [safeContainerHeight, position]\n    );\n\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () =>\n        cond(\n          greaterThan(position, snapPoints[snapPoints.length - 1]),\n          0.001,\n          NORMAL_DECELERATION_RATE\n        ),\n      [position, snapPoints]\n    );\n    //#endregion\n\n    //#region layout callbacks\n    const handleOnContainerMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnContainerMeasureHeight', height);\n      didSetContainerHeight.current = true;\n      setContainerHeight(height);\n    }, []);\n\n    const handleOnHandleMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnHandleMeasureHeight', height);\n      didSetHandleHeight.current = true;\n      setHandleHeight(height);\n    }, []);\n    //#endregion\n\n    //#region private methods\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentIndexRef.current, 0);\n      if (containerTapGestureRef.current) {\n        // @ts-ignore\n        containerTapGestureRef.current.setNativeProps({\n          maxDeltaY: Math.abs(\n            snapPoints[snapPoints.length - 1] - snapPoints[currentPositionIndex]\n          ),\n        });\n      }\n\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n      }\n    }, [snapPoints, containerTapGestureRef, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_providedOnChange) {\n        _providedOnChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapTo = useCallback(\n      (index: number) => {\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      manualSnapToPoint.setValue(safeContainerHeight);\n    }, [manualSnapToPoint, safeContainerHeight]);\n    const handleExpand = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region context variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        decelerationRate,\n        scrollableContentOffsetY,\n        handleSettingScrollableRef,\n        removeScrollableRef,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region expose public methods\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo<Animated.AnimateStyle<ViewStyle>>(\n      () => ({\n        ...styles.container,\n        opacity: animatedIsLayoutReady,\n        transform: [\n          {\n            translateY: cond(\n              animatedIsLayoutReady,\n              position,\n              safeContainerHeight\n            ),\n          },\n        ],\n      }),\n      [safeContainerHeight, position, animatedIsLayoutReady]\n    );\n    const contentContainerStyle = useMemo(\n      () => ({\n        ...styles.contentContainer,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n    //#endregion\n\n    //#region effects\n\n    /**\n     * This will animate the sheet to the initial snap point\n     * when component is mounted.\n     */\n    useLayoutEffect(() => {\n      if (\n        animateOnMount &&\n        isLayoutCalculated &&\n        didMountOnAnimate.current === false\n      ) {\n        manualSnapToPoint.setValue(snapPoints[_providedIndex]);\n        didMountOnAnimate.current = true;\n      }\n    }, [\n      _providedIndex,\n      animateOnMount,\n      isLayoutCalculated,\n      manualSnapToPoint,\n      snapPoints,\n    ]);\n\n    /*\n     * keep animated position synced with snap points.\n     */\n    useEffect(() => {\n      if (isLayoutCalculated && currentIndexRef.current !== -1) {\n        manualSnapToPoint.setValue(snapPoints[currentIndexRef.current]);\n      }\n    }, [isLayoutCalculated, snapPoints, manualSnapToPoint]);\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (\n              currentPositionIndex === -1 &&\n              args[0] !== safeContainerHeight - topInset\n            ) {\n              return;\n            }\n\n            /**\n             * Here we announce the bottom sheet position\n             * for accessibility service.\n             */\n            AccessibilityInfo.isScreenReaderEnabled().then(isEnabled => {\n              if (!isEnabled) {\n                return;\n              }\n              const positionInScreen = Math.max(\n                Math.floor(\n                  ((WINDOW_HEIGHT - snapPoints[currentPositionIndex] || 1) /\n                    WINDOW_HEIGHT) *\n                    100\n                ),\n                0\n              ).toFixed(0);\n              AccessibilityInfo.announceForAccessibility(\n                `Bottom sheet snapped to ${positionInScreen}% of the screen`\n              );\n            });\n\n            currentIndexRef.current = currentPositionIndex;\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, safeContainerHeight, topInset, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(containerTapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, snapPoints[snapPoints.length - 1])\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      [snapPoints]\n    );\n    //#endregion\n\n    //#region render\n    // console.log('BottomSheet', 'render', snapPoints, safeHandleHeight);\n    return (\n      <BottomSheetProvider value={externalContextVariables}>\n        <BottomSheetBackdropContainer\n          key=\"BottomSheetBackdropContainer\"\n          animatedIndex={animatedIndex}\n          animatedPosition={animatedPosition}\n          backdropComponent={backdropComponent}\n        />\n        <BottomSheetContainer\n          key=\"BottomSheetContainer\"\n          shouldMeasureHeight={shouldMeasureContainerHeight}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n        >\n          <BottomSheetContentWrapper\n            key=\"BottomSheetContentWrapper\"\n            ref={containerTapGestureRef}\n            {...containerTapGestureHandler}\n          >\n            <Animated.View\n              accessible={true}\n              accessibilityRole=\"adjustable\"\n              accessibilityLabel=\"Bottom Sheet\"\n              style={containerStyle}\n            >\n              <BottomSheetInternalProvider value={internalContextVariables}>\n                <BottomSheetBackgroundContainer\n                  key=\"BottomSheetBackgroundContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                />\n                <BottomSheetHandleContainer\n                  key=\"BottomSheetHandleContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  simultaneousHandlers={containerTapGestureRef}\n                  shouldMeasureHeight={shouldMeasureHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  handleComponent={handleComponent}\n                  onMeasureHeight={handleOnHandleMeasureHeight}\n                  {...handlePanGestureHandler}\n                />\n                <BottomSheetDraggableView\n                  key=\"BottomSheetRootDraggableView\"\n                  style={contentContainerStyle}\n                >\n                  {children}\n                </BottomSheetDraggableView>\n              </BottomSheetInternalProvider>\n            </Animated.View>\n          </BottomSheetContentWrapper>\n\n          {_providedAnimatedPosition && (\n            <Animated.Code\n              exec={set(_providedAnimatedPosition, animatedPosition)}\n            />\n          )}\n\n          {_providedAnimatedIndex && (\n            <Animated.Code exec={set(_providedAnimatedIndex, animatedIndex)} />\n          )}\n\n          {/* <BottomSheetDebugView\n          values={{\n            position,\n            manualSnapToPoint,\n          }}\n        /> */}\n        </BottomSheetContainer>\n      </BottomSheetProvider>\n    );\n    //#endregion\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n"]}