{"version":3,"sources":["BottomSheetModalProvider.tsx"],"names":["React","useCallback","useMemo","useRef","useState","PortalHost","BottomSheetModalProvider","BottomSheetModalInternalProvider","BottomSheetContainer","WINDOW_HEIGHT","BottomSheetModalProviderWrapper","props","children","containerHeight","setContainerHeight","sheetsQueueRef","handleOnContainerMeasureHeight","height","handleMountSheet","key","ref","mountedSheet","current","length","willUnmount","minimize","isIncomingSheetMounted","find","item","undefined","newSheetsQueue","filter","push","restore","handleUnmountSheet","hasMinimizedSheet","handleWillUnmountSheet","sheetToBeUnmount","handleDismiss","sheetToBeDismissed","dismiss","handleDismissAll","map","externalContextVariables","dismissAll","internalContextVariables","mountSheet","unmountSheet","willUnmountSheet"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { PortalHost } from '@gorhom/portal';\nimport {\n  BottomSheetModalProvider,\n  BottomSheetModalInternalProvider,\n} from '../../contexts';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport { WINDOW_HEIGHT } from '../../constants';\nimport type {\n  BottomSheetModalProviderProps,\n  BottomSheetModalRef,\n} from './types';\n\nconst BottomSheetModalProviderWrapper = (\n  props: BottomSheetModalProviderProps\n) => {\n  // extract props\n  const { children } = props;\n\n  //#region layout state\n  const [containerHeight, setContainerHeight] = useState(WINDOW_HEIGHT);\n  //#endregion\n\n  //#region variables\n  const sheetsQueueRef = useRef<BottomSheetModalRef[]>([]);\n  //#endregion\n\n  //#region callback\n  const handleOnContainerMeasureHeight = useCallback((height: number) => {\n    setContainerHeight(height);\n  }, []);\n  //#endregion\n\n  //#region private methods\n  const handleMountSheet = useCallback((key: string, ref) => {\n    /**\n     * Here we try to minimize the current sheet if exists,\n     * also we make sure that it is not incoming mounted sheet.\n     */\n    const mountedSheet =\n      sheetsQueueRef.current[sheetsQueueRef.current.length - 1];\n    if (mountedSheet && mountedSheet.key !== key && !mountedSheet.willUnmount) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 1\n      ].ref.current.minimize();\n    }\n\n    /**\n     * We check if the incoming sheet is already mounted.\n     */\n    const isIncomingSheetMounted =\n      sheetsQueueRef.current.find(item => item.key === key) !== undefined;\n\n    if (isIncomingSheetMounted) {\n      /**\n       * We move the mounted incoming sheet to the\n       * end of the queue.\n       */\n      const newSheetsQueue = sheetsQueueRef.current.filter(\n        item => item.key !== key\n      );\n      newSheetsQueue.push({\n        key,\n        ref,\n        willUnmount: false,\n      });\n      sheetsQueueRef.current = newSheetsQueue;\n\n      ref.current.restore();\n    } else {\n      /**\n       * We add the incoming sheet to the end of the queue.\n       */\n      sheetsQueueRef.current.push({\n        key,\n        ref,\n        willUnmount: false,\n      });\n    }\n  }, []);\n  const handleUnmountSheet = useCallback((key: string) => {\n    /**\n     * Here we remove the unmounted sheet and update\n     * the sheets queue.\n     */\n    const newSheetsQueue = sheetsQueueRef.current.filter(\n      item => item.key !== key\n    );\n    sheetsQueueRef.current = newSheetsQueue;\n\n    /**\n     * Here we try to restore previous sheet position,\n     * This is needed when user dismiss the modal by panning down.\n     */\n    const hasMinimizedSheet = sheetsQueueRef.current.length > 0;\n    if (hasMinimizedSheet) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 1\n      ].ref.current.restore();\n    }\n  }, []);\n  const handleWillUnmountSheet = useCallback((key: string) => {\n    /**\n     * Here we mark the sheet that will unmount,\n     * so it won't be restored.\n     */\n    const sheetToBeUnmount = sheetsQueueRef.current.find(\n      item => item.key === key\n    );\n    if (sheetToBeUnmount) {\n      sheetToBeUnmount.willUnmount = true;\n    }\n\n    /**\n     * Here we try to restore previous sheet position,\n     * This is needed when user dismiss the modal by fire the dismiss action.\n     */\n    const hasMinimizedSheet = sheetsQueueRef.current.length > 1;\n    if (hasMinimizedSheet) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 2\n      ].ref.current.restore();\n    }\n  }, []);\n  //#endregion\n\n  //#region public methods\n  const handleDismiss = useCallback((key: string) => {\n    const sheetToBeDismissed = sheetsQueueRef.current.find(\n      item => item.key === key\n    );\n    if (sheetToBeDismissed) {\n      sheetToBeDismissed.ref.current.dismiss(true);\n    }\n  }, []);\n  const handleDismissAll = useCallback(() => {\n    sheetsQueueRef.current.map(item => {\n      item.ref.current.dismiss(true);\n    });\n  }, []);\n  //#endregion\n\n  //#region context variables\n  const externalContextVariables = useMemo(\n    () => ({\n      dismiss: handleDismiss,\n      dismissAll: handleDismissAll,\n    }),\n    [handleDismiss, handleDismissAll]\n  );\n  const internalContextVariables = useMemo(\n    () => ({\n      containerHeight,\n      mountSheet: handleMountSheet,\n      unmountSheet: handleUnmountSheet,\n      willUnmountSheet: handleWillUnmountSheet,\n    }),\n    [\n      containerHeight,\n      handleMountSheet,\n      handleUnmountSheet,\n      handleWillUnmountSheet,\n    ]\n  );\n  //#endregion\n\n  //#region renders\n  return (\n    <BottomSheetModalProvider value={externalContextVariables}>\n      <BottomSheetModalInternalProvider value={internalContextVariables}>\n        <BottomSheetContainer\n          shouldMeasureHeight={true}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n          children={null}\n        />\n        <PortalHost>{children}</PortalHost>\n      </BottomSheetModalInternalProvider>\n    </BottomSheetModalProvider>\n  );\n  //#endregion\n};\n\nexport default BottomSheetModalProviderWrapper;\n"]}