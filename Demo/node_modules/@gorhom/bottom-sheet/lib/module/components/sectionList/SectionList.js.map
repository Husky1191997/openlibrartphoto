{"version":3,"sources":["SectionList.tsx"],"names":["React","useImperativeHandle","useEffect","useRef","forwardRef","memo","SectionList","RNSectionList","isEqual","Animated","NativeViewGestureHandler","BottomSheetDraggableView","useScrollableInternal","useBottomSheetInternal","styles","AnimatedSectionList","createAnimatedComponent","BottomSheetSectionListComponent","props","ref","focusHook","useFocusHook","rest","nativeGestureRef","scrollableRef","handleScrollEvent","handleSettingScrollable","enableContentPanningGesture","containerTapGestureRef","decelerationRate","current","getNode","container","BottomSheetSectionList"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,mBADF,EAEEC,SAFF,EAGEC,MAHF,EAKEC,UALF,EAMEC,IANF,QAOO,OAPP;AAQA,SACEC,WAAW,IAAIC,aADjB,QAIO,cAJP;AAKA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,OAAOC,wBAAP,MAAqC,6BAArC;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,aAA9D;AAKA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,mBAAmB,GAAGN,QAAQ,CAACO,uBAAT,CAC1BT,aAD0B,CAA5B;AAOA,MAAMU,+BAA+B,gBAAGb,UAAU,CAChD,CAACc,KAAD,EAA0CC,GAA1C,KAAsE;AACpE;AACA,QAAM;AAAEC,IAAAA,SAAS,EAAEC,YAAY,GAAGnB,SAA5B;AAAuC,OAAGoB;AAA1C,MAAmDJ,KAAzD,CAFoE,CAIpE;;AACA,QAAMK,gBAAgB,GAAGpB,MAAM,CAA2B,IAA3B,CAA/B,CALoE,CAOpE;;AACA,QAAM;AACJqB,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA;AAHI,MAIFd,qBAAqB,CAAC,aAAD,CAJzB;AAKA,QAAM;AACJe,IAAAA,2BADI;AAEJC,IAAAA,sBAFI;AAGJC,IAAAA;AAHI,MAIFhB,sBAAsB,EAJ1B,CAboE,CAkBpE;AACA;;AACAZ,EAAAA,mBAAmB,CAACkB,GAAD,EAAM,MAAMK,aAAa,CAACM,OAAd,CAAuBC,OAAvB,EAAZ,CAAnB;AACAV,EAAAA,YAAY,CAACK,uBAAD,CAAZ,CArBoE,CAuBpE;;AACA,sBACE,oBAAC,wBAAD;AACE,IAAA,gBAAgB,EAAEH,gBADpB;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAET,MAAM,CAACkB;AAHhB,kBAKE,oBAAC,wBAAD;AACE,IAAA,GAAG,EAAET,gBADP;AAEE,IAAA,OAAO,EAAEI,2BAFX;AAGE,IAAA,OAAO,EAAEC;AAHX,kBAKE,oBAAC,mBAAD,eACMN,IADN;AAEE;AACA,IAAA,GAAG,EAAEE,aAHP;AAIE,IAAA,cAAc,EAAC,OAJjB;AAKE,IAAA,OAAO,EAAE,KALX;AAME,IAAA,gBAAgB,EAAEK,gBANpB;AAOE,IAAA,mBAAmB,EAAE,CAPvB;AAQE,IAAA,iBAAiB,EAAEJ;AARrB,KALF,CALF,CADF;AAwBD,CAjD+C,CAAlD;AAoDA,MAAMQ,sBAAsB,gBAAG5B,IAAI,CAACY,+BAAD,EAAkCT,OAAlC,CAAnC;AAEA,eAAgByB,sBAAhB","sourcesContent":["import React, {\n  useImperativeHandle,\n  useEffect,\n  useRef,\n  Ref,\n  forwardRef,\n  memo,\n} from 'react';\nimport {\n  SectionList as RNSectionList,\n  SectionListProps as RNSectionListProps,\n  ViewStyle,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport Animated from 'react-native-reanimated';\nimport { NativeViewGestureHandler } from 'react-native-gesture-handler';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport { useScrollableInternal, useBottomSheetInternal } from '../../hooks';\nimport type {\n  BottomSheetSectionListProps,\n  BottomSheetSectionListType,\n} from './types';\nimport { styles } from './styles';\n\nconst AnimatedSectionList = Animated.createAnimatedComponent(\n  RNSectionList\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, RNSectionListProps<any>>,\n  any\n>;\n\nconst BottomSheetSectionListComponent = forwardRef(\n  (props: BottomSheetSectionListProps<any>, ref: Ref<RNSectionList>) => {\n    // props\n    const { focusHook: useFocusHook = useEffect, ...rest } = props;\n\n    // refs\n    const nativeGestureRef = useRef<NativeViewGestureHandler>(null);\n\n    // hooks\n    const {\n      scrollableRef,\n      handleScrollEvent,\n      handleSettingScrollable,\n    } = useScrollableInternal('SectionList');\n    const {\n      enableContentPanningGesture,\n      containerTapGestureRef,\n      decelerationRate,\n    } = useBottomSheetInternal();\n    // effects\n    // @ts-ignore\n    useImperativeHandle(ref, () => scrollableRef.current!.getNode());\n    useFocusHook(handleSettingScrollable);\n\n    // render\n    return (\n      <BottomSheetDraggableView\n        nativeGestureRef={nativeGestureRef}\n        gestureType=\"CONTENT\"\n        style={styles.container}\n      >\n        <NativeViewGestureHandler\n          ref={nativeGestureRef}\n          enabled={enableContentPanningGesture}\n          waitFor={containerTapGestureRef}\n        >\n          <AnimatedSectionList\n            {...rest}\n            // @ts-ignore\n            ref={scrollableRef}\n            overScrollMode=\"never\"\n            bounces={false}\n            decelerationRate={decelerationRate}\n            scrollEventThrottle={1}\n            onScrollBeginDrag={handleScrollEvent}\n          />\n        </NativeViewGestureHandler>\n      </BottomSheetDraggableView>\n    );\n  }\n);\n\nconst BottomSheetSectionList = memo(BottomSheetSectionListComponent, isEqual);\n\nexport default (BottomSheetSectionList as any) as typeof BottomSheetSectionListType;\n"]}