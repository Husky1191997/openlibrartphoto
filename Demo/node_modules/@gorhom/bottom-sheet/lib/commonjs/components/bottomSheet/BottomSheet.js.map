{"version":3,"sources":["BottomSheet.tsx"],"names":["interpolate","interpolateV1","interpolateNode","interpolateV2","require","Animated","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","props","ref","animationDuration","DEFAULT_ANIMATION_DURATION","animationEasing","DEFAULT_ANIMATION_EASING","index","_providedIndex","snapPoints","_providedSnapPoints","handleHeight","_providedHandleHeight","containerHeight","_providedContainerHeight","topInset","enableContentPanningGesture","DEFAULT_ENABLE_CONTENT_PANNING_GESTURE","enableHandlePanningGesture","DEFAULT_ENABLE_HANDLE_PANNING_GESTURE","animateOnMount","DEFAULT_ANIMATE_ON_MOUNT","animatedPosition","_providedAnimatedPosition","animatedIndex","_providedAnimatedIndex","onChange","_providedOnChange","onAnimate","_providedOnAnimate","handleComponent","backdropComponent","backgroundComponent","children","containerTapGestureRef","setContainerHeight","setHandleHeight","safeHandleHeight","DEFAULT_HANDLE_HEIGHT","safeContainerHeight","WINDOW_HEIGHT","shouldMeasureContainerHeight","undefined","shouldMeasureHandleHeight","didSetHandleHeight","didSetContainerHeight","isLayoutCalculated","current","animatedIsLayoutReady","currentIndexRef","didMountOnAnimate","scrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollToTop","flashScrollableIndicators","sheetHeight","length","initialPosition","state","containerTapGestureState","gestureHandler","containerTapGestureHandler","handlePanGestureState","translation","y","handlePanGestureTranslationY","velocity","handlePanGestureVelocityY","handlePanGestureHandler","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","handleOnAnimate","fromIndex","toIndex","position","manualSnapToPoint","currentPosition","currentGesture","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","map","_","push","inputRange","outputRange","extrapolate","Extrapolate","CLAMP","NORMAL_DECELERATION_RATE","handleOnContainerMeasureHeight","height","handleOnHandleMeasureHeight","refreshUIElements","currentPositionIndex","Math","max","setNativeProps","maxDeltaY","abs","handleOnChange","handleSettingScrollableRef","scrollableRef","handleSnapTo","setValue","handleClose","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","containerStyle","styles","container","opacity","transform","translateY","contentContainerStyle","contentContainer","args","indexOf","AccessibilityInfo","isScreenReaderEnabled","then","isEnabled","positionInScreen","floor","toFixed","announceForAccessibility","State","FAILED","GESTURE","CONTENT","BottomSheet","isEqual"],"mappings":";;;;;;;AAAA;;AAWA;;AACA;;AACA;;AACA;;AAcA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAOA;;AAIA;;AACA;;AAWA;;;;;;;;;;AAEA,MAAM;AACJA,EAAAA,WAAW,EAAEC,aADT;AAEJC,EAAAA,eAAe,EAAEC;AAFb,IAGFC,OAAO,CAAC,yBAAD,CAHX;;AAIA,MAAMJ,WAAW,GAAGG,aAAa,IAAIF,aAArC;;AAIAI,+BAASC,qBAAT,CAA+B;AAC7BC,EAAAA,gBAAgB,EAAE;AADW,CAA/B;;AAIA,MAAMC,oBAAoB,gBAAG,uBAC3B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd;AACA,gCAAkBD,KAAlB,EAFc,CAGd;AAEA;;AACA,QAAM;AACJ;AACAE,IAAAA,iBAAiB,GAAGC,sCAFhB;AAGJC,IAAAA,eAAe,GAAGC,oCAHd;AAIJ;AACAC,IAAAA,KAAK,EAAEC,cAAc,GAAG,CALpB;AAMJC,IAAAA,UAAU,EAAEC,mBANR;AAOJC,IAAAA,YAAY,EAAEC,qBAPV;AAQJC,IAAAA,eAAe,EAAEC,wBARb;AASJC,IAAAA,QAAQ,GAAG,CATP;AAUJC,IAAAA,2BAA2B,GAAGC,kDAV1B;AAWJC,IAAAA,0BAA0B,GAAGC,iDAXzB;AAYJC,IAAAA,cAAc,GAAGC,oCAZb;AAaJ;AACAC,IAAAA,gBAAgB,EAAEC,yBAdd;AAeJC,IAAAA,aAAa,EAAEC,sBAfX;AAgBJ;AACAC,IAAAA,QAAQ,EAAEC,iBAjBN;AAkBJC,IAAAA,SAAS,EAAEC,kBAlBP;AAmBJ;AACAC,IAAAA,eApBI;AAqBJC,IAAAA,iBArBI;AAsBJC,IAAAA,mBAtBI;AAuBJC,IAAAA;AAvBI,MAwBFhC,KAxBJ,CANc,CA+Bd;AAEA;;AACA,QAAMiC,sBAAsB,GAAG,mBAA0B,IAA1B,CAA/B,CAlCc,CAmCd;AAEA;AACA;;AACA,QAAM,CAACrB,eAAD,EAAkBsB,kBAAlB,IAAwC,qBAC5CrB,wBAD4C,CAA9C;AAGA,QAAM,CAACH,YAAD,EAAeyB,eAAf,IAAkC,qBAASxB,qBAAT,CAAxC,CA1Cc,CA4Cd;;AAEA,QAAMyB,gBAAgB,GAAG,oBACvB,MAAM1B,YAAY,IAAI2B,iCADC,EAEvB,CAAC3B,YAAD,CAFuB,CAAzB;AAIA,QAAM4B,mBAAmB,GAAG,oBAC1B,MAAMzB,wBAAwB,IAAID,eAA5B,IAA+C2B,wBAD3B,EAE1B,CAAC1B,wBAAD,EAA2BD,eAA3B,CAF0B,CAA5B,CAlDc,CAuDd;;AACA,QAAM4B,4BAA4B,GAAG,oBACnC,MAAM3B,wBAAwB,KAAK4B,SADA,EAEnC,CAAC5B,wBAAD,CAFmC,CAArC;AAIA,QAAM6B,yBAAyB,GAAG,oBAChC,MACE/B,qBAAqB,KAAK8B,SAA1B,IACAV,mBAAmB,KAAKU,SAHM,EAIhC,CAAC9B,qBAAD,EAAwBoB,mBAAxB,CAJgC,CAAlC,CA5Dc,CAmEd;;AACA,QAAMY,kBAAkB,GAAG,mBAAO,CAACD,yBAAR,CAA3B;AACA,QAAME,qBAAqB,GAAG,mBAAO,CAACJ,4BAAR,CAA9B;AAEA,QAAMK,kBAAkB,GAAG,oBACzB,MAAM;AACJ,WAAOF,kBAAkB,CAACG,OAAnB,IAA8BF,qBAAqB,CAACE,OAA3D;AACD,GAHwB,EAIzB;AACA,GAAClC,eAAD,EAAkBF,YAAlB,CALyB,CAA3B;AAOA,QAAMqC,qBAAqB,GAAG,6BAAiBF,kBAAkB,GAAG,CAAH,GAAO,CAA1C,CAA9B,CA9Ec,CAgFd;AAEA;AAEA;;AACA,QAAMG,eAAe,GAAG,mBAAezC,cAAf,CAAxB;AACA,QAAM0C,iBAAiB,GAAG,mBAAO,KAAP,CAA1B;AAEA,QAAM;AACJC,IAAAA,wBADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA,mBAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA;AALI,MAMF,2BANJ;AAQA,QAAM9C,UAAU,GAAG,oCACjBC,mBADiB,EAEjBK,QAFiB,EAGjBwB,mBAHiB,EAIjBF,gBAJiB,CAAnB;AAOA,QAAMmB,WAAW,GAAG,oBAClB,MACEjB,mBAAmB,GACnB9B,UAAU,CAACA,UAAU,CAACgD,MAAX,GAAoB,CAArB,CADV,GAEApB,gBAJgB,EAKlB,CAAC5B,UAAD,EAAa8B,mBAAb,EAAkCF,gBAAlC,CALkB,CAApB;AAQA,QAAMqB,eAAe,GAAG,oBAAQ,MAAM;AACpC,WAAOT,eAAe,CAACF,OAAhB,GAA0B,CAA1B,IAA+B3B,cAA/B,GACHmB,mBAAmB,GAAGxB,QADnB,GAEHN,UAAU,CAACwC,eAAe,CAACF,OAAjB,CAFd;AAGD,GAJuB,EAIrB,CAACtC,UAAD,EAAaW,cAAb,EAA6BmB,mBAA7B,EAAkDxB,QAAlD,CAJqB,CAAxB,CA/Gc,CAoHd;AAEA;;AACA,QAAM;AACJ4C,IAAAA,KAAK,EAAEC,wBADH;AAEJC,IAAAA,cAAc,EAAEC;AAFZ,MAGF,8CAHJ;AAIA,QAAM;AACJH,IAAAA,KAAK,EAAEI,qBADH;AAEJC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,CAAC,EAAEC;AAAL,KAFT;AAGJC,IAAAA,QAAQ,EAAE;AAAEF,MAAAA,CAAC,EAAEG;AAAL,KAHN;AAIJP,IAAAA,cAAc,EAAEQ;AAJZ,MAKF,8CALJ;AAMA,QAAM;AACJV,IAAAA,KAAK,EAAEW,sBADH;AAEJN,IAAAA,WAAW,EAAE;AAAEC,MAAAA,CAAC,EAAEM;AAAL,KAFT;AAGJJ,IAAAA,QAAQ,EAAE;AAAEF,MAAAA,CAAC,EAAEO;AAAL;AAHN,MAIF,8CAJJ,CAjIc,CAsId;AAEA;;AACA,QAAMC,eAAe,GAAG,8BACtB,CAACC,SAAD,EAAoBC,OAApB,KAAwC;AACtC,QAAI9C,kBAAJ,EAAwB;AACtBA,MAAAA,kBAAkB,CAAC6C,SAAD,EAAYC,OAAZ,CAAlB;AACD;AACF,GALqB,CAAxB;AAOA,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,eAHI;AAIJC,IAAAA;AAJI,MAKF,kCAAc;AAChB5E,IAAAA,iBADgB;AAEhBE,IAAAA,eAFgB;AAGhBiE,IAAAA,sBAHgB;AAIhBC,IAAAA,6BAJgB;AAKhBC,IAAAA,0BALgB;AAMhBT,IAAAA,qBANgB;AAOhBG,IAAAA,4BAPgB;AAQhBE,IAAAA,yBARgB;AAShBjB,IAAAA,wBATgB;AAUhBH,IAAAA,qBAVgB;AAWhBvC,IAAAA,UAXgB;AAYhBiD,IAAAA,eAZgB;AAahBT,IAAAA,eAbgB;AAchBrB,IAAAA,SAAS,EAAE6C;AAdK,GAAd,CALJ,CAhJc,CAsKd;;AACA,QAAMjD,aAAa,GAAG,oBAAQ,MAAM;AAClC,UAAMwD,kBAAkB,GAAGvE,UAAU,CAACwE,KAAX,GAAmBC,OAAnB,EAA3B;AACA,UAAMC,yBAAyB,GAAG1E,UAAU,CACzCwE,KAD+B,GAE/BG,GAF+B,CAE3B,CAACC,CAAD,EAAI9E,KAAJ,KAAcA,KAFa,EAG/B2E,OAH+B,EAAlC;AAKA;;;;;AAIA,QAAIzE,UAAU,CAACgD,MAAX,KAAsB,CAA1B,EAA6B;AAC3BuB,MAAAA,kBAAkB,CAACM,IAAnB,CAAwB/C,mBAAxB;AACA4C,MAAAA,yBAAyB,CAACG,IAA1B,CAA+B,CAAC,CAAhC;AACD;;AAED,WAAO9F,WAAW,CAACoF,QAAD,EAAW;AAC3BW,MAAAA,UAAU,EAAEP,kBADe;AAE3BQ,MAAAA,WAAW,EAAEL,yBAFc;AAG3BM,MAAAA,WAAW,EAAEC,mCAAYC;AAHE,KAAX,CAAlB;AAKD,GArBqB,EAqBnB,CAACf,QAAD,EAAWrC,mBAAX,EAAgC9B,UAAhC,CArBmB,CAAtB;AAuBA,QAAMa,gBAAgB,GAAG,oBACvB,MAAM,gCAAI,gCAAIiB,mBAAJ,EAAyBqC,QAAzB,CAAJ,CADiB,EAEvB,CAACrC,mBAAD,EAAsBqC,QAAtB,CAFuB,CAAzB;AAKA;;;;AAGA,QAAM7E,gBAAgB,GAAG,oBACvB,MACE,iCACE,wCAAY6E,QAAZ,EAAsBnE,UAAU,CAACA,UAAU,CAACgD,MAAX,GAAoB,CAArB,CAAhC,CADF,EAEE,KAFF,EAGEmC,oCAHF,CAFqB,EAOvB,CAAChB,QAAD,EAAWnE,UAAX,CAPuB,CAAzB,CAtMc,CA+Md;AAEA;;AACA,QAAMoF,8BAA8B,GAAG,wBAAaC,MAAD,IAAoB;AACrE;AACAjD,IAAAA,qBAAqB,CAACE,OAAtB,GAAgC,IAAhC;AACAZ,IAAAA,kBAAkB,CAAC2D,MAAD,CAAlB;AACD,GAJsC,EAIpC,EAJoC,CAAvC;AAMA,QAAMC,2BAA2B,GAAG,wBAAaD,MAAD,IAAoB;AAClE;AACAlD,IAAAA,kBAAkB,CAACG,OAAnB,GAA6B,IAA7B;AACAX,IAAAA,eAAe,CAAC0D,MAAD,CAAf;AACD,GAJmC,EAIjC,EAJiC,CAApC,CAxNc,CA6Nd;AAEA;;AACA,QAAME,iBAAiB,GAAG,wBAAY,MAAM;AAC1C,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,GAAL,CAASlD,eAAe,CAACF,OAAzB,EAAkC,CAAlC,CAA7B;;AACA,QAAIb,sBAAsB,CAACa,OAA3B,EAAoC;AAClC;AACAb,MAAAA,sBAAsB,CAACa,OAAvB,CAA+BqD,cAA/B,CAA8C;AAC5CC,QAAAA,SAAS,EAAEH,IAAI,CAACI,GAAL,CACT7F,UAAU,CAACA,UAAU,CAACgD,MAAX,GAAoB,CAArB,CAAV,GAAoChD,UAAU,CAACwF,oBAAD,CADrC;AADiC,OAA9C;AAKD;;AAED,QAAIA,oBAAoB,KAAKxF,UAAU,CAACgD,MAAX,GAAoB,CAAjD,EAAoD;AAClDF,MAAAA,yBAAyB;AAC1B;AACF,GAdyB,EAcvB,CAAC9C,UAAD,EAAayB,sBAAb,EAAqCqB,yBAArC,CAduB,CAA1B;AAeA,QAAMgD,cAAc,GAAG,8BAAmBhG,KAAD,IAAmB;AAC1D,QAAIoB,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB,CAACpB,KAAD,CAAjB;AACD;AACF,GAJsB,CAAvB;AAKA,QAAMiG,0BAA0B,GAAG,wBAChCC,aAAD,IAAkC;AAChCrD,IAAAA,gBAAgB,CAACqD,aAAD,CAAhB;AACAT,IAAAA,iBAAiB;AAClB,GAJgC,EAKjC,CAAC5C,gBAAD,EAAmB4C,iBAAnB,CALiC,CAAnC,CApPc,CA2Pd;AAEA;;AACA,QAAMU,YAAY,GAAG,wBAClBnG,KAAD,IAAmB;AACjB,4BACEA,KAAK,IAAI,CAAC,CAAV,IAAeA,KAAK,IAAIE,UAAU,CAACgD,MAAX,GAAoB,CAD9C,6GAGIhD,UAAU,CAACgD,MAAX,GAAoB,CAHxB;AAMAoB,IAAAA,iBAAiB,CAAC8B,QAAlB,CAA2BlG,UAAU,CAACF,KAAD,CAArC;AACD,GATkB,EAUnB,CAACE,UAAD,EAAaoE,iBAAb,CAVmB,CAArB;AAYA,QAAM+B,WAAW,GAAG,wBAAY,MAAM;AACpC/B,IAAAA,iBAAiB,CAAC8B,QAAlB,CAA2BpE,mBAA3B;AACD,GAFmB,EAEjB,CAACsC,iBAAD,EAAoBtC,mBAApB,CAFiB,CAApB;AAGA,QAAMsE,YAAY,GAAG,wBAAY,MAAM;AACrChC,IAAAA,iBAAiB,CAAC8B,QAAlB,CAA2BlG,UAAU,CAACA,UAAU,CAACgD,MAAX,GAAoB,CAArB,CAArC;AACD,GAFoB,EAElB,CAAChD,UAAD,EAAaoE,iBAAb,CAFkB,CAArB;AAGA,QAAMiC,cAAc,GAAG,wBAAY,MAAM;AACvCjC,IAAAA,iBAAiB,CAAC8B,QAAlB,CAA2BlG,UAAU,CAAC,CAAD,CAArC;AACD,GAFsB,EAEpB,CAACA,UAAD,EAAaoE,iBAAb,CAFoB,CAAvB,CAhRc,CAmRd;AAEA;;AACA,QAAMkC,wBAAwB,GAAG,oBAC/B,OAAO;AACL/F,IAAAA,2BADK;AAELkB,IAAAA,sBAFK;AAGL6B,IAAAA,qBAHK;AAILG,IAAAA,4BAJK;AAKLE,IAAAA,yBALK;AAMLE,IAAAA,sBANK;AAOLC,IAAAA,6BAPK;AAQLC,IAAAA,0BARK;AASLrB,IAAAA,wBATK;AAULpD,IAAAA,gBAVK;AAWLqD,IAAAA,gBAAgB,EAAEoD,0BAXb;AAYLnD,IAAAA;AAZK,GAAP,CAD+B,EAe/B,CACErC,2BADF,EAEEkB,sBAFF,EAGEoC,sBAHF,EAIEC,6BAJF,EAKEC,0BALF,EAMET,qBANF,EAOEG,4BAPF,EAQEE,yBARF,EASErE,gBATF,EAUEoD,wBAVF,EAWEqD,0BAXF,EAYEnD,mBAZF,CAf+B,CAAjC;AA8BA,QAAM2D,wBAAwB,GAAG,oBAC/B,OAAO;AACLC,IAAAA,MAAM,EAAEP,YADH;AAELQ,IAAAA,MAAM,EAAEL,YAFH;AAGLM,IAAAA,QAAQ,EAAEL,cAHL;AAILM,IAAAA,KAAK,EAAER;AAJF,GAAP,CAD+B,EAO/B,CAACF,YAAD,EAAeG,YAAf,EAA6BC,cAA7B,EAA6CF,WAA7C,CAP+B,CAAjC,CApTc,CA6Td;AAEA;;AACA,kCAAoB1G,GAApB,EAAyB,OAAO;AAC9B+G,IAAAA,MAAM,EAAEP,YADsB;AAE9BQ,IAAAA,MAAM,EAAEL,YAFsB;AAG9BM,IAAAA,QAAQ,EAAEL,cAHoB;AAI9BM,IAAAA,KAAK,EAAER;AAJuB,GAAP,CAAzB,EAhUc,CAsUd;AAEA;;AACA,QAAMS,cAAc,GAAG,oBACrB,OAAO,EACL,GAAGC,eAAOC,SADL;AAELC,IAAAA,OAAO,EAAExE,qBAFJ;AAGLyE,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,UAAU,EAAE,iCACV1E,qBADU,EAEV4B,QAFU,EAGVrC,mBAHU;AADd,KADS;AAHN,GAAP,CADqB,EAcrB,CAACA,mBAAD,EAAsBqC,QAAtB,EAAgC5B,qBAAhC,CAdqB,CAAvB;AAgBA,QAAM2E,qBAAqB,GAAG,oBAC5B,OAAO,EACL,GAAGL,eAAOM,gBADL;AAEL9B,IAAAA,MAAM,EAAEtC;AAFH,GAAP,CAD4B,EAK5B,CAACA,WAAD,CAL4B,CAA9B,CAzVc,CAgWd;AAEA;;AAEA;;;;;AAIA,8BAAgB,MAAM;AACpB,QACEpC,cAAc,IACd0B,kBADA,IAEAI,iBAAiB,CAACH,OAAlB,KAA8B,KAHhC,EAIE;AACA8B,MAAAA,iBAAiB,CAAC8B,QAAlB,CAA2BlG,UAAU,CAACD,cAAD,CAArC;AACA0C,MAAAA,iBAAiB,CAACH,OAAlB,GAA4B,IAA5B;AACD;AACF,GATD,EASG,CACDvC,cADC,EAEDY,cAFC,EAGD0B,kBAHC,EAID+B,iBAJC,EAKDpE,UALC,CATH;AAiBA;;;;AAGA,wBAAU,MAAM;AACd,QAAIqC,kBAAkB,IAAIG,eAAe,CAACF,OAAhB,KAA4B,CAAC,CAAvD,EAA0D;AACxD8B,MAAAA,iBAAiB,CAAC8B,QAAlB,CAA2BlG,UAAU,CAACwC,eAAe,CAACF,OAAjB,CAArC;AACD;AACF,GAJD,EAIG,CAACD,kBAAD,EAAqBrC,UAArB,EAAiCoE,iBAAjC,CAJH;AAMA;;;;;;;;;AAQA,sCACE,MACE,qCAASC,eAAT,EAA0B,CACxB,iCAAK,CAACA,eAAD,CAAL,EAAwB+C,IAAI,IAAI;AAC9B,UAAM5B,oBAAoB,GAAGxF,UAAU,CAACqH,OAAX,CAAmBD,IAAI,CAAC,CAAD,CAAvB,CAA7B;AAEA;;;;AAGA,QACE5B,oBAAoB,KAAK,CAAC,CAA1B,IACA4B,IAAI,CAAC,CAAD,CAAJ,KAAYtF,mBAAmB,GAAGxB,QAFpC,EAGE;AACA;AACD;AAED;;;;;;AAIAgH,mCAAkBC,qBAAlB,GAA0CC,IAA1C,CAA+CC,SAAS,IAAI;AAC1D,UAAI,CAACA,SAAL,EAAgB;AACd;AACD;;AACD,YAAMC,gBAAgB,GAAGjC,IAAI,CAACC,GAAL,CACvBD,IAAI,CAACkC,KAAL,CACG,CAAC5F,2BAAgB/B,UAAU,CAACwF,oBAAD,CAA1B,IAAoD,CAArD,IACCzD,wBADF,GAEE,GAHJ,CADuB,EAMvB,CANuB,EAOvB6F,OAPuB,CAOf,CAPe,CAAzB;;AAQAN,qCAAkBO,wBAAlB,mCAC6BH,gBAD7B;AAGD,KAfD;;AAiBAlF,IAAAA,eAAe,CAACF,OAAhB,GAA0BkD,oBAA1B;AACAD,IAAAA,iBAAiB;AACjBO,IAAAA,cAAc,CAACN,oBAAD,CAAd;AACD,GArCD,CADwB,CAA1B,CAFJ,EA0CE,CAACxF,UAAD,EAAa8B,mBAAb,EAAkCxB,QAAlC,EAA4CiF,iBAA5C,CA1CF;AA6CA;;;;;;;AAMA,sCACE,MACE,iCACE,gCACE,+BAAGpC,wBAAH,EAA6B2E,iCAAMC,MAAnC,CADF,EAEE,+BAAGzD,cAAH,EAAmB0D,mBAAQC,OAA3B,CAFF,EAGE,gCAAI9D,QAAJ,EAAcnE,UAAU,CAACA,UAAU,CAACgD,MAAX,GAAoB,CAArB,CAAxB,CAHF,CADF,EAME,iCAAK,EAAL,EAAS,MAAM;AACbH,IAAAA,WAAW;AACZ,GAFD,CANF,CAFJ,EAYE,CAAC7C,UAAD,CAZF,EA7bc,CA2cd;AAEA;AACA;;AACA,sBACE,6BAAC,6BAAD;AAAqB,IAAA,KAAK,EAAEuG;AAA5B,kBACE,6BAAC,qCAAD;AACE,IAAA,GAAG,EAAC,8BADN;AAEE,IAAA,aAAa,EAAExF,aAFjB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,iBAAiB,EAAES;AAJrB,IADF,eAOE,6BAAC,6BAAD;AACE,IAAA,GAAG,EAAC,sBADN;AAEE,IAAA,mBAAmB,EAAEU,4BAFvB;AAGE,IAAA,eAAe,EAAEoD;AAHnB,kBAKE,6BAAC,kCAAD;AACE,IAAA,GAAG,EAAC,2BADN;AAEE,IAAA,GAAG,EAAE3D;AAFP,KAGM4B,0BAHN,gBAKE,6BAAC,8BAAD,CAAU,IAAV;AACE,IAAA,UAAU,EAAE,IADd;AAEE,IAAA,iBAAiB,EAAC,YAFpB;AAGE,IAAA,kBAAkB,EAAC,cAHrB;AAIE,IAAA,KAAK,EAAEuD;AAJT,kBAME,6BAAC,qCAAD;AAA6B,IAAA,KAAK,EAAEN;AAApC,kBACE,6BAAC,uCAAD;AACE,IAAA,GAAG,EAAC,gCADN;AAEE,IAAA,aAAa,EAAEvF,aAFjB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,mBAAmB,EAAEU;AAJvB,IADF,eAOE,6BAAC,mCAAD;AACE,IAAA,GAAG,EAAC,4BADN;AAEE,IAAA,aAAa,EAAER,aAFjB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,oBAAoB,EAAEY,sBAJxB;AAKE,IAAA,mBAAmB,EAAES,yBALvB;AAME,IAAA,0BAA0B,EAAEzB,0BAN9B;AAOE,IAAA,eAAe,EAAEY,eAPnB;AAQE,IAAA,eAAe,EAAEiE;AARnB,KASM1B,uBATN,EAPF,eAkBE,6BAAC,iCAAD;AACE,IAAA,GAAG,EAAC,8BADN;AAEE,IAAA,KAAK,EAAEsD;AAFT,KAIG1F,QAJH,CAlBF,CANF,CALF,CALF,EA4CGV,yBAAyB,iBACxB,6BAAC,8BAAD,CAAU,IAAV;AACE,IAAA,IAAI,EAAE,gCAAIA,yBAAJ,EAA+BD,gBAA/B;AADR,IA7CJ,EAkDGG,sBAAsB,iBACrB,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAE,gCAAIA,sBAAJ,EAA4BD,aAA5B;AAArB,IAnDJ,CAPF,CADF,CA/cc,CAshBd;AACD,CAxhB0B,CAA7B;AA2hBA,MAAMmH,WAAW,gBAAG,iBAAK3I,oBAAL,EAA2B4I,eAA3B,CAApB;eAEeD,W","sourcesContent":["import React, {\n  useState,\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useLayoutEffect,\n  useEffect,\n} from 'react';\nimport { ViewStyle, AccessibilityInfo } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  Extrapolate,\n  set,\n  sub,\n  abs,\n  greaterThan,\n} from 'react-native-reanimated';\nimport { State, TapGestureHandler } from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n} from 'react-native-redash';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport BottomSheetContentWrapper from '../bottomSheetContentWrapper';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\nimport BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport { useTransition } from './useTransition';\nimport {\n  useStableCallback,\n  useScrollable,\n  useNormalizedSnapPoints,\n  usePropsValidator,\n  useReactiveValue,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE, WINDOW_HEIGHT } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_HANDLE_HEIGHT,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (props, ref) => {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      topInset = 0,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      // animated nodes callback\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n      // callbacks\n      onChange: _providedOnChange,\n      onAnimate: _providedOnAnimate,\n      // components\n      handleComponent,\n      backdropComponent,\n      backgroundComponent,\n      children,\n    } = props;\n    //#endregion\n\n    //#region component refs\n    const containerTapGestureRef = useRef<TapGestureHandler>(null);\n    //#endregion\n\n    //#region layout variables\n    // state\n    const [containerHeight, setContainerHeight] = useState(\n      _providedContainerHeight\n    );\n    const [handleHeight, setHandleHeight] = useState(_providedHandleHeight);\n\n    // safe layout values\n\n    const safeHandleHeight = useMemo(\n      () => handleHeight || DEFAULT_HANDLE_HEIGHT,\n      [handleHeight]\n    );\n    const safeContainerHeight = useMemo(\n      () => _providedContainerHeight || containerHeight || WINDOW_HEIGHT,\n      [_providedContainerHeight, containerHeight]\n    );\n\n    // conditions\n    const shouldMeasureContainerHeight = useMemo(\n      () => _providedContainerHeight === undefined,\n      [_providedContainerHeight]\n    );\n    const shouldMeasureHandleHeight = useMemo(\n      () =>\n        _providedHandleHeight === undefined &&\n        backgroundComponent !== undefined,\n      [_providedHandleHeight, backgroundComponent]\n    );\n\n    // refs\n    const didSetHandleHeight = useRef(!shouldMeasureHandleHeight);\n    const didSetContainerHeight = useRef(!shouldMeasureContainerHeight);\n\n    const isLayoutCalculated = useMemo(\n      () => {\n        return didSetHandleHeight.current && didSetContainerHeight.current;\n      },\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [containerHeight, handleHeight]\n    );\n    const animatedIsLayoutReady = useReactiveValue(isLayoutCalculated ? 1 : 0);\n\n    //#endregion\n\n    //#region variables\n\n    // refs\n    const currentIndexRef = useRef<number>(_providedIndex);\n    const didMountOnAnimate = useRef(false);\n\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    const snapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      topInset,\n      safeContainerHeight,\n      safeHandleHeight\n    );\n\n    const sheetHeight = useMemo(\n      () =>\n        safeContainerHeight -\n        snapPoints[snapPoints.length - 1] -\n        safeHandleHeight,\n      [snapPoints, safeContainerHeight, safeHandleHeight]\n    );\n\n    const initialPosition = useMemo(() => {\n      return currentIndexRef.current < 0 || animateOnMount\n        ? safeContainerHeight - topInset\n        : snapPoints[currentIndexRef.current];\n    }, [snapPoints, animateOnMount, safeContainerHeight, topInset]);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: containerTapGestureState,\n      gestureHandler: containerTapGestureHandler,\n    } = useTapGestureHandler();\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n    //#endregion\n\n    //#region animated variables\n    const handleOnAnimate = useStableCallback(\n      (fromIndex: number, toIndex: number) => {\n        if (_providedOnAnimate) {\n          _providedOnAnimate(fromIndex, toIndex);\n        }\n      }\n    );\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      animatedIsLayoutReady,\n      snapPoints,\n      initialPosition,\n      currentIndexRef,\n      onAnimate: handleOnAnimate,\n    });\n\n    // animated values\n    const animatedIndex = useMemo(() => {\n      const adjustedSnapPoints = snapPoints.slice().reverse();\n      const adjustedSnapPointsIndexes = snapPoints\n        .slice()\n        .map((_, index) => index)\n        .reverse();\n\n      /**\n       * this been added to resolve issues when provide\n       * one snap point.\n       */\n      if (snapPoints.length === 1) {\n        adjustedSnapPoints.push(safeContainerHeight);\n        adjustedSnapPointsIndexes.push(-1);\n      }\n\n      return interpolate(position, {\n        inputRange: adjustedSnapPoints,\n        outputRange: adjustedSnapPointsIndexes,\n        extrapolate: Extrapolate.CLAMP,\n      });\n    }, [position, safeContainerHeight, snapPoints]);\n\n    const animatedPosition = useMemo(\n      () => abs(sub(safeContainerHeight, position)),\n      [safeContainerHeight, position]\n    );\n\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () =>\n        cond(\n          greaterThan(position, snapPoints[snapPoints.length - 1]),\n          0.001,\n          NORMAL_DECELERATION_RATE\n        ),\n      [position, snapPoints]\n    );\n    //#endregion\n\n    //#region layout callbacks\n    const handleOnContainerMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnContainerMeasureHeight', height);\n      didSetContainerHeight.current = true;\n      setContainerHeight(height);\n    }, []);\n\n    const handleOnHandleMeasureHeight = useCallback((height: number) => {\n      // console.log('BottomSheet', 'handleOnHandleMeasureHeight', height);\n      didSetHandleHeight.current = true;\n      setHandleHeight(height);\n    }, []);\n    //#endregion\n\n    //#region private methods\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentIndexRef.current, 0);\n      if (containerTapGestureRef.current) {\n        // @ts-ignore\n        containerTapGestureRef.current.setNativeProps({\n          maxDeltaY: Math.abs(\n            snapPoints[snapPoints.length - 1] - snapPoints[currentPositionIndex]\n          ),\n        });\n      }\n\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n      }\n    }, [snapPoints, containerTapGestureRef, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_providedOnChange) {\n        _providedOnChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapTo = useCallback(\n      (index: number) => {\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      manualSnapToPoint.setValue(safeContainerHeight);\n    }, [manualSnapToPoint, safeContainerHeight]);\n    const handleExpand = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region context variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        enableContentPanningGesture,\n        containerTapGestureRef,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        decelerationRate,\n        scrollableContentOffsetY,\n        handleSettingScrollableRef,\n        removeScrollableRef,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region expose public methods\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo<Animated.AnimateStyle<ViewStyle>>(\n      () => ({\n        ...styles.container,\n        opacity: animatedIsLayoutReady,\n        transform: [\n          {\n            translateY: cond(\n              animatedIsLayoutReady,\n              position,\n              safeContainerHeight\n            ),\n          },\n        ],\n      }),\n      [safeContainerHeight, position, animatedIsLayoutReady]\n    );\n    const contentContainerStyle = useMemo(\n      () => ({\n        ...styles.contentContainer,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n    //#endregion\n\n    //#region effects\n\n    /**\n     * This will animate the sheet to the initial snap point\n     * when component is mounted.\n     */\n    useLayoutEffect(() => {\n      if (\n        animateOnMount &&\n        isLayoutCalculated &&\n        didMountOnAnimate.current === false\n      ) {\n        manualSnapToPoint.setValue(snapPoints[_providedIndex]);\n        didMountOnAnimate.current = true;\n      }\n    }, [\n      _providedIndex,\n      animateOnMount,\n      isLayoutCalculated,\n      manualSnapToPoint,\n      snapPoints,\n    ]);\n\n    /*\n     * keep animated position synced with snap points.\n     */\n    useEffect(() => {\n      if (isLayoutCalculated && currentIndexRef.current !== -1) {\n        manualSnapToPoint.setValue(snapPoints[currentIndexRef.current]);\n      }\n    }, [isLayoutCalculated, snapPoints, manualSnapToPoint]);\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (\n              currentPositionIndex === -1 &&\n              args[0] !== safeContainerHeight - topInset\n            ) {\n              return;\n            }\n\n            /**\n             * Here we announce the bottom sheet position\n             * for accessibility service.\n             */\n            AccessibilityInfo.isScreenReaderEnabled().then(isEnabled => {\n              if (!isEnabled) {\n                return;\n              }\n              const positionInScreen = Math.max(\n                Math.floor(\n                  ((WINDOW_HEIGHT - snapPoints[currentPositionIndex] || 1) /\n                    WINDOW_HEIGHT) *\n                    100\n                ),\n                0\n              ).toFixed(0);\n              AccessibilityInfo.announceForAccessibility(\n                `Bottom sheet snapped to ${positionInScreen}% of the screen`\n              );\n            });\n\n            currentIndexRef.current = currentPositionIndex;\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, safeContainerHeight, topInset, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(containerTapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, snapPoints[snapPoints.length - 1])\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      [snapPoints]\n    );\n    //#endregion\n\n    //#region render\n    // console.log('BottomSheet', 'render', snapPoints, safeHandleHeight);\n    return (\n      <BottomSheetProvider value={externalContextVariables}>\n        <BottomSheetBackdropContainer\n          key=\"BottomSheetBackdropContainer\"\n          animatedIndex={animatedIndex}\n          animatedPosition={animatedPosition}\n          backdropComponent={backdropComponent}\n        />\n        <BottomSheetContainer\n          key=\"BottomSheetContainer\"\n          shouldMeasureHeight={shouldMeasureContainerHeight}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n        >\n          <BottomSheetContentWrapper\n            key=\"BottomSheetContentWrapper\"\n            ref={containerTapGestureRef}\n            {...containerTapGestureHandler}\n          >\n            <Animated.View\n              accessible={true}\n              accessibilityRole=\"adjustable\"\n              accessibilityLabel=\"Bottom Sheet\"\n              style={containerStyle}\n            >\n              <BottomSheetInternalProvider value={internalContextVariables}>\n                <BottomSheetBackgroundContainer\n                  key=\"BottomSheetBackgroundContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                />\n                <BottomSheetHandleContainer\n                  key=\"BottomSheetHandleContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  simultaneousHandlers={containerTapGestureRef}\n                  shouldMeasureHeight={shouldMeasureHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  handleComponent={handleComponent}\n                  onMeasureHeight={handleOnHandleMeasureHeight}\n                  {...handlePanGestureHandler}\n                />\n                <BottomSheetDraggableView\n                  key=\"BottomSheetRootDraggableView\"\n                  style={contentContainerStyle}\n                >\n                  {children}\n                </BottomSheetDraggableView>\n              </BottomSheetInternalProvider>\n            </Animated.View>\n          </BottomSheetContentWrapper>\n\n          {_providedAnimatedPosition && (\n            <Animated.Code\n              exec={set(_providedAnimatedPosition, animatedPosition)}\n            />\n          )}\n\n          {_providedAnimatedIndex && (\n            <Animated.Code exec={set(_providedAnimatedIndex, animatedIndex)} />\n          )}\n\n          {/* <BottomSheetDebugView\n          values={{\n            position,\n            manualSnapToPoint,\n          }}\n        /> */}\n        </BottomSheetContainer>\n      </BottomSheetProvider>\n    );\n    //#endregion\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n"]}