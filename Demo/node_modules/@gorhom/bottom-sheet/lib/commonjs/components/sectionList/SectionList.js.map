{"version":3,"sources":["SectionList.tsx"],"names":["AnimatedSectionList","Animated","createAnimatedComponent","RNSectionList","BottomSheetSectionListComponent","props","ref","focusHook","useFocusHook","useEffect","rest","nativeGestureRef","scrollableRef","handleScrollEvent","handleSettingScrollable","enableContentPanningGesture","containerTapGestureRef","decelerationRate","current","getNode","styles","container","BottomSheetSectionList","isEqual"],"mappings":";;;;;;;AAAA;;AAQA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;;;;;;;AAEA,MAAMA,mBAAmB,GAAGC,+BAASC,uBAAT,CAC1BC,wBAD0B,CAA5B;;AAOA,MAAMC,+BAA+B,gBAAG,uBACtC,CAACC,KAAD,EAA0CC,GAA1C,KAAsE;AACpE;AACA,QAAM;AAAEC,IAAAA,SAAS,EAAEC,YAAY,GAAGC,gBAA5B;AAAuC,OAAGC;AAA1C,MAAmDL,KAAzD,CAFoE,CAIpE;;AACA,QAAMM,gBAAgB,GAAG,mBAAiC,IAAjC,CAAzB,CALoE,CAOpE;;AACA,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA;AAHI,MAIF,kCAAsB,aAAtB,CAJJ;AAKA,QAAM;AACJC,IAAAA,2BADI;AAEJC,IAAAA,sBAFI;AAGJC,IAAAA;AAHI,MAIF,oCAJJ,CAboE,CAkBpE;AACA;;AACA,kCAAoBX,GAApB,EAAyB,MAAMM,aAAa,CAACM,OAAd,CAAuBC,OAAvB,EAA/B;AACAX,EAAAA,YAAY,CAACM,uBAAD,CAAZ,CArBoE,CAuBpE;;AACA,sBACE,6BAAC,iCAAD;AACE,IAAA,gBAAgB,EAAEH,gBADpB;AAEE,IAAA,WAAW,EAAC,SAFd;AAGE,IAAA,KAAK,EAAES,eAAOC;AAHhB,kBAKE,6BAAC,mDAAD;AACE,IAAA,GAAG,EAAEV,gBADP;AAEE,IAAA,OAAO,EAAEI,2BAFX;AAGE,IAAA,OAAO,EAAEC;AAHX,kBAKE,6BAAC,mBAAD,eACMN,IADN;AAEE;AACA,IAAA,GAAG,EAAEE,aAHP;AAIE,IAAA,cAAc,EAAC,OAJjB;AAKE,IAAA,OAAO,EAAE,KALX;AAME,IAAA,gBAAgB,EAAEK,gBANpB;AAOE,IAAA,mBAAmB,EAAE,CAPvB;AAQE,IAAA,iBAAiB,EAAEJ;AARrB,KALF,CALF,CADF;AAwBD,CAjDqC,CAAxC;AAoDA,MAAMS,sBAAsB,gBAAG,iBAAKlB,+BAAL,EAAsCmB,eAAtC,CAA/B;eAEgBD,sB","sourcesContent":["import React, {\n  useImperativeHandle,\n  useEffect,\n  useRef,\n  Ref,\n  forwardRef,\n  memo,\n} from 'react';\nimport {\n  SectionList as RNSectionList,\n  SectionListProps as RNSectionListProps,\n  ViewStyle,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport Animated from 'react-native-reanimated';\nimport { NativeViewGestureHandler } from 'react-native-gesture-handler';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\nimport { useScrollableInternal, useBottomSheetInternal } from '../../hooks';\nimport type {\n  BottomSheetSectionListProps,\n  BottomSheetSectionListType,\n} from './types';\nimport { styles } from './styles';\n\nconst AnimatedSectionList = Animated.createAnimatedComponent(\n  RNSectionList\n) as React.ComponentClass<\n  Animated.AnimateProps<ViewStyle, RNSectionListProps<any>>,\n  any\n>;\n\nconst BottomSheetSectionListComponent = forwardRef(\n  (props: BottomSheetSectionListProps<any>, ref: Ref<RNSectionList>) => {\n    // props\n    const { focusHook: useFocusHook = useEffect, ...rest } = props;\n\n    // refs\n    const nativeGestureRef = useRef<NativeViewGestureHandler>(null);\n\n    // hooks\n    const {\n      scrollableRef,\n      handleScrollEvent,\n      handleSettingScrollable,\n    } = useScrollableInternal('SectionList');\n    const {\n      enableContentPanningGesture,\n      containerTapGestureRef,\n      decelerationRate,\n    } = useBottomSheetInternal();\n    // effects\n    // @ts-ignore\n    useImperativeHandle(ref, () => scrollableRef.current!.getNode());\n    useFocusHook(handleSettingScrollable);\n\n    // render\n    return (\n      <BottomSheetDraggableView\n        nativeGestureRef={nativeGestureRef}\n        gestureType=\"CONTENT\"\n        style={styles.container}\n      >\n        <NativeViewGestureHandler\n          ref={nativeGestureRef}\n          enabled={enableContentPanningGesture}\n          waitFor={containerTapGestureRef}\n        >\n          <AnimatedSectionList\n            {...rest}\n            // @ts-ignore\n            ref={scrollableRef}\n            overScrollMode=\"never\"\n            bounces={false}\n            decelerationRate={decelerationRate}\n            scrollEventThrottle={1}\n            onScrollBeginDrag={handleScrollEvent}\n          />\n        </NativeViewGestureHandler>\n      </BottomSheetDraggableView>\n    );\n  }\n);\n\nconst BottomSheetSectionList = memo(BottomSheetSectionListComponent, isEqual);\n\nexport default (BottomSheetSectionList as any) as typeof BottomSheetSectionListType;\n"]}