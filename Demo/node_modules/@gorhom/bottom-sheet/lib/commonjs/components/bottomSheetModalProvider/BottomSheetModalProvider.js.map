{"version":3,"sources":["BottomSheetModalProvider.tsx"],"names":["BottomSheetModalProviderWrapper","props","children","containerHeight","setContainerHeight","WINDOW_HEIGHT","sheetsQueueRef","handleOnContainerMeasureHeight","height","handleMountSheet","key","ref","mountedSheet","current","length","willUnmount","minimize","isIncomingSheetMounted","find","item","undefined","newSheetsQueue","filter","push","restore","handleUnmountSheet","hasMinimizedSheet","handleWillUnmountSheet","sheetToBeUnmount","handleDismiss","sheetToBeDismissed","dismiss","handleDismissAll","map","externalContextVariables","dismissAll","internalContextVariables","mountSheet","unmountSheet","willUnmountSheet"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAIA;;AACA;;;;;;;;AAMA,MAAMA,+BAA+B,GACnCC,KADsC,IAEnC;AACH;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB,CAFG,CAIH;;AACA,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAwC,qBAASC,wBAAT,CAA9C,CALG,CAMH;AAEA;;AACA,QAAMC,cAAc,GAAG,mBAA8B,EAA9B,CAAvB,CATG,CAUH;AAEA;;AACA,QAAMC,8BAA8B,GAAG,wBAAaC,MAAD,IAAoB;AACrEJ,IAAAA,kBAAkB,CAACI,MAAD,CAAlB;AACD,GAFsC,EAEpC,EAFoC,CAAvC,CAbG,CAgBH;AAEA;;AACA,QAAMC,gBAAgB,GAAG,wBAAY,CAACC,GAAD,EAAcC,GAAd,KAAsB;AACzD;;;;AAIA,UAAMC,YAAY,GAChBN,cAAc,CAACO,OAAf,CAAuBP,cAAc,CAACO,OAAf,CAAuBC,MAAvB,GAAgC,CAAvD,CADF;;AAEA,QAAIF,YAAY,IAAIA,YAAY,CAACF,GAAb,KAAqBA,GAArC,IAA4C,CAACE,YAAY,CAACG,WAA9D,EAA2E;AACzET,MAAAA,cAAc,CAACO,OAAf,CACEP,cAAc,CAACO,OAAf,CAAuBC,MAAvB,GAAgC,CADlC,EAEEH,GAFF,CAEME,OAFN,CAEcG,QAFd;AAGD;AAED;;;;;AAGA,UAAMC,sBAAsB,GAC1BX,cAAc,CAACO,OAAf,CAAuBK,IAAvB,CAA4BC,IAAI,IAAIA,IAAI,CAACT,GAAL,KAAaA,GAAjD,MAA0DU,SAD5D;;AAGA,QAAIH,sBAAJ,EAA4B;AAC1B;;;;AAIA,YAAMI,cAAc,GAAGf,cAAc,CAACO,OAAf,CAAuBS,MAAvB,CACrBH,IAAI,IAAIA,IAAI,CAACT,GAAL,KAAaA,GADA,CAAvB;AAGAW,MAAAA,cAAc,CAACE,IAAf,CAAoB;AAClBb,QAAAA,GADkB;AAElBC,QAAAA,GAFkB;AAGlBI,QAAAA,WAAW,EAAE;AAHK,OAApB;AAKAT,MAAAA,cAAc,CAACO,OAAf,GAAyBQ,cAAzB;AAEAV,MAAAA,GAAG,CAACE,OAAJ,CAAYW,OAAZ;AACD,KAhBD,MAgBO;AACL;;;AAGAlB,MAAAA,cAAc,CAACO,OAAf,CAAuBU,IAAvB,CAA4B;AAC1Bb,QAAAA,GAD0B;AAE1BC,QAAAA,GAF0B;AAG1BI,QAAAA,WAAW,EAAE;AAHa,OAA5B;AAKD;AACF,GA7CwB,EA6CtB,EA7CsB,CAAzB;AA8CA,QAAMU,kBAAkB,GAAG,wBAAaf,GAAD,IAAiB;AACtD;;;;AAIA,UAAMW,cAAc,GAAGf,cAAc,CAACO,OAAf,CAAuBS,MAAvB,CACrBH,IAAI,IAAIA,IAAI,CAACT,GAAL,KAAaA,GADA,CAAvB;AAGAJ,IAAAA,cAAc,CAACO,OAAf,GAAyBQ,cAAzB;AAEA;;;;;AAIA,UAAMK,iBAAiB,GAAGpB,cAAc,CAACO,OAAf,CAAuBC,MAAvB,GAAgC,CAA1D;;AACA,QAAIY,iBAAJ,EAAuB;AACrBpB,MAAAA,cAAc,CAACO,OAAf,CACEP,cAAc,CAACO,OAAf,CAAuBC,MAAvB,GAAgC,CADlC,EAEEH,GAFF,CAEME,OAFN,CAEcW,OAFd;AAGD;AACF,GApB0B,EAoBxB,EApBwB,CAA3B;AAqBA,QAAMG,sBAAsB,GAAG,wBAAajB,GAAD,IAAiB;AAC1D;;;;AAIA,UAAMkB,gBAAgB,GAAGtB,cAAc,CAACO,OAAf,CAAuBK,IAAvB,CACvBC,IAAI,IAAIA,IAAI,CAACT,GAAL,KAAaA,GADE,CAAzB;;AAGA,QAAIkB,gBAAJ,EAAsB;AACpBA,MAAAA,gBAAgB,CAACb,WAAjB,GAA+B,IAA/B;AACD;AAED;;;;;;AAIA,UAAMW,iBAAiB,GAAGpB,cAAc,CAACO,OAAf,CAAuBC,MAAvB,GAAgC,CAA1D;;AACA,QAAIY,iBAAJ,EAAuB;AACrBpB,MAAAA,cAAc,CAACO,OAAf,CACEP,cAAc,CAACO,OAAf,CAAuBC,MAAvB,GAAgC,CADlC,EAEEH,GAFF,CAEME,OAFN,CAEcW,OAFd;AAGD;AACF,GAtB8B,EAsB5B,EAtB4B,CAA/B,CAtFG,CA6GH;AAEA;;AACA,QAAMK,aAAa,GAAG,wBAAanB,GAAD,IAAiB;AACjD,UAAMoB,kBAAkB,GAAGxB,cAAc,CAACO,OAAf,CAAuBK,IAAvB,CACzBC,IAAI,IAAIA,IAAI,CAACT,GAAL,KAAaA,GADI,CAA3B;;AAGA,QAAIoB,kBAAJ,EAAwB;AACtBA,MAAAA,kBAAkB,CAACnB,GAAnB,CAAuBE,OAAvB,CAA+BkB,OAA/B,CAAuC,IAAvC;AACD;AACF,GAPqB,EAOnB,EAPmB,CAAtB;AAQA,QAAMC,gBAAgB,GAAG,wBAAY,MAAM;AACzC1B,IAAAA,cAAc,CAACO,OAAf,CAAuBoB,GAAvB,CAA2Bd,IAAI,IAAI;AACjCA,MAAAA,IAAI,CAACR,GAAL,CAASE,OAAT,CAAiBkB,OAAjB,CAAyB,IAAzB;AACD,KAFD;AAGD,GAJwB,EAItB,EAJsB,CAAzB,CAxHG,CA6HH;AAEA;;AACA,QAAMG,wBAAwB,GAAG,oBAC/B,OAAO;AACLH,IAAAA,OAAO,EAAEF,aADJ;AAELM,IAAAA,UAAU,EAAEH;AAFP,GAAP,CAD+B,EAK/B,CAACH,aAAD,EAAgBG,gBAAhB,CAL+B,CAAjC;AAOA,QAAMI,wBAAwB,GAAG,oBAC/B,OAAO;AACLjC,IAAAA,eADK;AAELkC,IAAAA,UAAU,EAAE5B,gBAFP;AAGL6B,IAAAA,YAAY,EAAEb,kBAHT;AAILc,IAAAA,gBAAgB,EAAEZ;AAJb,GAAP,CAD+B,EAO/B,CACExB,eADF,EAEEM,gBAFF,EAGEgB,kBAHF,EAIEE,sBAJF,CAP+B,CAAjC,CAvIG,CAqJH;AAEA;;AACA,sBACE,6BAAC,kCAAD;AAA0B,IAAA,KAAK,EAAEO;AAAjC,kBACE,6BAAC,0CAAD;AAAkC,IAAA,KAAK,EAAEE;AAAzC,kBACE,6BAAC,6BAAD;AACE,IAAA,mBAAmB,EAAE,IADvB;AAEE,IAAA,eAAe,EAAE7B,8BAFnB;AAGE,IAAA,QAAQ,EAAE;AAHZ,IADF,eAME,6BAAC,kBAAD,QAAaL,QAAb,CANF,CADF,CADF,CAxJG,CAoKH;AACD,CAvKD;;eAyKeF,+B","sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { PortalHost } from '@gorhom/portal';\nimport {\n  BottomSheetModalProvider,\n  BottomSheetModalInternalProvider,\n} from '../../contexts';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport { WINDOW_HEIGHT } from '../../constants';\nimport type {\n  BottomSheetModalProviderProps,\n  BottomSheetModalRef,\n} from './types';\n\nconst BottomSheetModalProviderWrapper = (\n  props: BottomSheetModalProviderProps\n) => {\n  // extract props\n  const { children } = props;\n\n  //#region layout state\n  const [containerHeight, setContainerHeight] = useState(WINDOW_HEIGHT);\n  //#endregion\n\n  //#region variables\n  const sheetsQueueRef = useRef<BottomSheetModalRef[]>([]);\n  //#endregion\n\n  //#region callback\n  const handleOnContainerMeasureHeight = useCallback((height: number) => {\n    setContainerHeight(height);\n  }, []);\n  //#endregion\n\n  //#region private methods\n  const handleMountSheet = useCallback((key: string, ref) => {\n    /**\n     * Here we try to minimize the current sheet if exists,\n     * also we make sure that it is not incoming mounted sheet.\n     */\n    const mountedSheet =\n      sheetsQueueRef.current[sheetsQueueRef.current.length - 1];\n    if (mountedSheet && mountedSheet.key !== key && !mountedSheet.willUnmount) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 1\n      ].ref.current.minimize();\n    }\n\n    /**\n     * We check if the incoming sheet is already mounted.\n     */\n    const isIncomingSheetMounted =\n      sheetsQueueRef.current.find(item => item.key === key) !== undefined;\n\n    if (isIncomingSheetMounted) {\n      /**\n       * We move the mounted incoming sheet to the\n       * end of the queue.\n       */\n      const newSheetsQueue = sheetsQueueRef.current.filter(\n        item => item.key !== key\n      );\n      newSheetsQueue.push({\n        key,\n        ref,\n        willUnmount: false,\n      });\n      sheetsQueueRef.current = newSheetsQueue;\n\n      ref.current.restore();\n    } else {\n      /**\n       * We add the incoming sheet to the end of the queue.\n       */\n      sheetsQueueRef.current.push({\n        key,\n        ref,\n        willUnmount: false,\n      });\n    }\n  }, []);\n  const handleUnmountSheet = useCallback((key: string) => {\n    /**\n     * Here we remove the unmounted sheet and update\n     * the sheets queue.\n     */\n    const newSheetsQueue = sheetsQueueRef.current.filter(\n      item => item.key !== key\n    );\n    sheetsQueueRef.current = newSheetsQueue;\n\n    /**\n     * Here we try to restore previous sheet position,\n     * This is needed when user dismiss the modal by panning down.\n     */\n    const hasMinimizedSheet = sheetsQueueRef.current.length > 0;\n    if (hasMinimizedSheet) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 1\n      ].ref.current.restore();\n    }\n  }, []);\n  const handleWillUnmountSheet = useCallback((key: string) => {\n    /**\n     * Here we mark the sheet that will unmount,\n     * so it won't be restored.\n     */\n    const sheetToBeUnmount = sheetsQueueRef.current.find(\n      item => item.key === key\n    );\n    if (sheetToBeUnmount) {\n      sheetToBeUnmount.willUnmount = true;\n    }\n\n    /**\n     * Here we try to restore previous sheet position,\n     * This is needed when user dismiss the modal by fire the dismiss action.\n     */\n    const hasMinimizedSheet = sheetsQueueRef.current.length > 1;\n    if (hasMinimizedSheet) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 2\n      ].ref.current.restore();\n    }\n  }, []);\n  //#endregion\n\n  //#region public methods\n  const handleDismiss = useCallback((key: string) => {\n    const sheetToBeDismissed = sheetsQueueRef.current.find(\n      item => item.key === key\n    );\n    if (sheetToBeDismissed) {\n      sheetToBeDismissed.ref.current.dismiss(true);\n    }\n  }, []);\n  const handleDismissAll = useCallback(() => {\n    sheetsQueueRef.current.map(item => {\n      item.ref.current.dismiss(true);\n    });\n  }, []);\n  //#endregion\n\n  //#region context variables\n  const externalContextVariables = useMemo(\n    () => ({\n      dismiss: handleDismiss,\n      dismissAll: handleDismissAll,\n    }),\n    [handleDismiss, handleDismissAll]\n  );\n  const internalContextVariables = useMemo(\n    () => ({\n      containerHeight,\n      mountSheet: handleMountSheet,\n      unmountSheet: handleUnmountSheet,\n      willUnmountSheet: handleWillUnmountSheet,\n    }),\n    [\n      containerHeight,\n      handleMountSheet,\n      handleUnmountSheet,\n      handleWillUnmountSheet,\n    ]\n  );\n  //#endregion\n\n  //#region renders\n  return (\n    <BottomSheetModalProvider value={externalContextVariables}>\n      <BottomSheetModalInternalProvider value={internalContextVariables}>\n        <BottomSheetContainer\n          shouldMeasureHeight={true}\n          onMeasureHeight={handleOnContainerMeasureHeight}\n          children={null}\n        />\n        <PortalHost>{children}</PortalHost>\n      </BottomSheetModalInternalProvider>\n    </BottomSheetModalProvider>\n  );\n  //#endregion\n};\n\nexport default BottomSheetModalProviderWrapper;\n"]}