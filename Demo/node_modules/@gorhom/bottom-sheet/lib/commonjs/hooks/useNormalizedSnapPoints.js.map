{"version":3,"sources":["useNormalizedSnapPoints.ts"],"names":["useNormalizedSnapPoints","snapPoints","topInset","containerHeight","handleHeight","normalizedSnapPoints","map","normalizedSnapPoint","Math","ceil","max"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,MAAMA,uBAAuB,GAAG,CACrCC,UADqC,EAErCC,QAFqC,EAGrCC,eAAuB,GAAG,CAHW,EAIrCC,YAAoB,GAAG,CAJc,KAMrC,oBAAQ,MAAM;AACZ,QAAMC,oBAAoB,GAAG,oCAC3BJ,UAD2B,EAE3BE,eAF2B,EAG3BD,QAH2B,CAA7B;AAKA,SAAOG,oBAAoB,CAACC,GAArB,CAAyBC,mBAAmB,IAAI;AACrD;;;;AAIA,QAAIA,mBAAmB,KAAK,CAAxB,IAA6BH,YAAY,KAAK,CAAlD,EAAqD;AACnDG,MAAAA,mBAAmB,GAAGA,mBAAmB,GAAGH,YAA5C;AACD;;AACD,WAAOI,IAAI,CAACC,IAAL,CACLD,IAAI,CAACE,GAAL,CAASP,eAAe,GAAGI,mBAAlB,GAAwCH,YAAjD,EAA+DF,QAA/D,CADK,CAAP;AAGD,GAXM,CAAP;AAYD,CAlBD,EAkBG,CAACD,UAAD,EAAaC,QAAb,EAAuBC,eAAvB,EAAwCC,YAAxC,CAlBH,CANK","sourcesContent":["import { useMemo } from 'react';\nimport { normalizeSnapPoints } from '../utilities';\n\nexport const useNormalizedSnapPoints = (\n  snapPoints: Array<number | string>,\n  topInset: number,\n  containerHeight: number = 0,\n  handleHeight: number = 0\n) =>\n  useMemo(() => {\n    const normalizedSnapPoints = normalizeSnapPoints(\n      snapPoints,\n      containerHeight,\n      topInset\n    );\n    return normalizedSnapPoints.map(normalizedSnapPoint => {\n      /**\n       * we subset handleHeight from the `normalizedSnapPoint` to make\n       * sure that sheets and its handle will be out of the screen.\n       */\n      if (normalizedSnapPoint === 0 && handleHeight !== 0) {\n        normalizedSnapPoint = normalizedSnapPoint - handleHeight;\n      }\n      return Math.ceil(\n        Math.max(containerHeight - normalizedSnapPoint - handleHeight, topInset)\n      );\n    });\n  }, [snapPoints, topInset, containerHeight, handleHeight]);\n"]}