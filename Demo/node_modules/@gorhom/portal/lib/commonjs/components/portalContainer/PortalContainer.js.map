{"version":3,"sources":["PortalContainer.tsx"],"names":["PortalContainerComponent","_","ref","state","add","update","remove","handleMount","key","node","handleUpdate","handleUnmount","mount","unmount","map","item","PortalContainer"],"mappings":";;;;;;;AAAA;;AAMA;;;;;;AAGA,MAAMA,wBAAwB,gBAAG,uBAA+B,CAACC,CAAD,EAAIC,GAAJ,KAAY;AAC1E;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,MAAiC,sBAAvC,CAF0E,CAG1E;AAEA;;AACA,QAAMC,WAAW,GAAG,wBAClB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACbL,IAAAA,GAAG,CAACI,GAAD,EAAMC,IAAN,CAAH;AACD,GAHiB,EAIlB,CAACL,GAAD,CAJkB,CAApB;AAMA,QAAMM,YAAY,GAAG,wBACnB,CAACF,GAAD,EAAMC,IAAN,KAAe;AACbJ,IAAAA,MAAM,CAACG,GAAD,EAAMC,IAAN,CAAN;AACD,GAHkB,EAInB,CAACJ,MAAD,CAJmB,CAArB;AAMA,QAAMM,aAAa,GAAG,wBACpBH,GAAG,IAAI;AACLF,IAAAA,MAAM,CAACE,GAAD,CAAN;AACD,GAHmB,EAIpB,CAACF,MAAD,CAJoB,CAAtB,CAlB0E,CAwB1E;AAEA;;AACA,kCAAoBJ,GAApB,EAAyB,OAAO;AAC9BU,IAAAA,KAAK,EAAEL,WADuB;AAE9BF,IAAAA,MAAM,EAAEK,YAFsB;AAG9BG,IAAAA,OAAO,EAAEF;AAHqB,GAAP,CAAzB,EA3B0E,CAgC1E;AAEA;;AACA,sBAAO,4DAAGR,KAAK,CAACW,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACN,IAAvB,CAAH,CAAP,CAnC0E,CAoC1E;AACD,CArCgC,CAAjC;AAuCA,MAAMO,eAAe,gBAAG,iBAAKhB,wBAAL,CAAxB;eAEegB,e","sourcesContent":["import React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useImperativeHandle,\n} from 'react';\nimport { useNodes } from '../../hooks';\nimport type { PortalMethods } from '../../types';\n\nconst PortalContainerComponent = forwardRef<PortalMethods, any>((_, ref) => {\n  //#region state\n  const { state, add, update, remove } = useNodes();\n  //#endregion\n\n  //#region\n  const handleMount = useCallback(\n    (key, node) => {\n      add(key, node);\n    },\n    [add]\n  );\n  const handleUpdate = useCallback(\n    (key, node) => {\n      update(key, node);\n    },\n    [update]\n  );\n  const handleUnmount = useCallback(\n    key => {\n      remove(key);\n    },\n    [remove]\n  );\n  //#endregion\n\n  //#region forward methods\n  useImperativeHandle(ref, () => ({\n    mount: handleMount,\n    update: handleUpdate,\n    unmount: handleUnmount,\n  }));\n  //#endregion\n\n  //#region render\n  return <>{state.map(item => item.node)}</>;\n  //#endregion\n});\n\nconst PortalContainer = memo(PortalContainerComponent);\n\nexport default PortalContainer;\n"]}