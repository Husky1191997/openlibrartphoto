"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _portalContainer = _interopRequireDefault(require("../portalContainer"));

var _contexts = require("../../contexts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const PortalHostComponent = ({
  children
}) => {
  const containerRef = (0, _react.useRef)(null); //#region

  const mount = (0, _react.useCallback)((key, node) => {
    if (containerRef.current) {
      containerRef.current.mount(key, node);
    }
  }, []);
  const update = (0, _react.useCallback)((key, node) => {
    if (containerRef.current) {
      containerRef.current.update(key, node);
    }
  }, []);
  const unmount = (0, _react.useCallback)(key => {
    if (containerRef.current) {
      containerRef.current.unmount(key);
    }
  }, []); //#endregion

  const value = (0, _react.useMemo)(() => ({
    mount,
    update,
    unmount
  }), [mount, update, unmount]);
  return /*#__PURE__*/_react.default.createElement(_contexts.PortalContext.Provider, {
    value: value
  }, children, /*#__PURE__*/_react.default.createElement(_portalContainer.default, {
    ref: containerRef
  }));
};

const PortalHost = /*#__PURE__*/(0, _react.memo)(PortalHostComponent);
var _default = PortalHost;
exports.default = _default;
//# sourceMappingURL=PortalHost.js.map