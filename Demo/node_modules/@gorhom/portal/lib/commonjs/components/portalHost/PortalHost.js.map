{"version":3,"sources":["PortalHost.tsx"],"names":["PortalHostComponent","children","containerRef","mount","key","node","current","update","unmount","value","PortalHost"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAIA,MAAMA,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmC;AAC7D,QAAMC,YAAY,GAAG,mBAAsB,IAAtB,CAArB,CAD6D,CAG7D;;AACA,QAAMC,KAAK,GAAG,wBAAY,CAACC,GAAD,EAAMC,IAAN,KAAe;AACvC,QAAIH,YAAY,CAACI,OAAjB,EAA0B;AACxBJ,MAAAA,YAAY,CAACI,OAAb,CAAqBH,KAArB,CAA2BC,GAA3B,EAAgCC,IAAhC;AACD;AACF,GAJa,EAIX,EAJW,CAAd;AAKA,QAAME,MAAM,GAAG,wBAAY,CAACH,GAAD,EAAMC,IAAN,KAAe;AACxC,QAAIH,YAAY,CAACI,OAAjB,EAA0B;AACxBJ,MAAAA,YAAY,CAACI,OAAb,CAAqBC,MAArB,CAA4BH,GAA5B,EAAiCC,IAAjC;AACD;AACF,GAJc,EAIZ,EAJY,CAAf;AAKA,QAAMG,OAAO,GAAG,wBAAYJ,GAAG,IAAI;AACjC,QAAIF,YAAY,CAACI,OAAjB,EAA0B;AACxBJ,MAAAA,YAAY,CAACI,OAAb,CAAqBE,OAArB,CAA6BJ,GAA7B;AACD;AACF,GAJe,EAIb,EAJa,CAAhB,CAd6D,CAmB7D;;AAEA,QAAMK,KAAK,GAAG,oBACZ,OAAO;AACLN,IAAAA,KADK;AAELI,IAAAA,MAFK;AAGLC,IAAAA;AAHK,GAAP,CADY,EAMZ,CAACL,KAAD,EAAQI,MAAR,EAAgBC,OAAhB,CANY,CAAd;AASA,sBACE,6BAAC,uBAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC;AAA/B,KACGR,QADH,eAEE,6BAAC,wBAAD;AAAiB,IAAA,GAAG,EAAEC;AAAtB,IAFF,CADF;AAMD,CApCD;;AAsCA,MAAMQ,UAAU,gBAAG,iBAAKV,mBAAL,CAAnB;eAEeU,U","sourcesContent":["import React, { memo, useCallback, useMemo, useRef } from 'react';\nimport PortalContainer from '../portalContainer';\nimport { PortalContext } from '../../contexts';\nimport type { PortalMethods } from '../../types';\nimport type { PortalHostProps } from './types';\n\nconst PortalHostComponent = ({ children }: PortalHostProps) => {\n  const containerRef = useRef<PortalMethods>(null);\n\n  //#region\n  const mount = useCallback((key, node) => {\n    if (containerRef.current) {\n      containerRef.current.mount(key, node);\n    }\n  }, []);\n  const update = useCallback((key, node) => {\n    if (containerRef.current) {\n      containerRef.current.update(key, node);\n    }\n  }, []);\n  const unmount = useCallback(key => {\n    if (containerRef.current) {\n      containerRef.current.unmount(key);\n    }\n  }, []);\n  //#endregion\n\n  const value = useMemo(\n    () => ({\n      mount,\n      update,\n      unmount,\n    }),\n    [mount, update, unmount]\n  );\n\n  return (\n    <PortalContext.Provider value={value}>\n      {children}\n      <PortalContainer ref={containerRef} />\n    </PortalContext.Provider>\n  );\n};\n\nconst PortalHost = memo(PortalHostComponent);\n\nexport default PortalHost;\n"]}